with "mbicp/mbicp";
with "agpl/agpl";
with "agpl/gtkada_conditional";
with "player-ada/player3_ada.gpr";
with "player3-ada/playerc30_jano";

project Sancta is

   type Boolean          is ("True",    "False");
   type Enabled_Disabled is ("Enabled", "Disabled");
   type Yes_No           is ("Yes",     "No");

   for Languages use ("Ada", "C", "C++");

   for Source_Dirs use ();
   for Object_Dir  use "obj";
   for Exec_Dir    use "obj";

   type       Hardware_Type is ("Player", "Aria");
   Hardware : Hardware_Type := external ("Sancta_Hardware", "Player");

   case Hardware is
      when "Player" => for Source_Dirs use project'Source_Dirs & ("src/player");
      when "Aria"   => for Source_Dirs use project'Source_Dirs & ("src/aria");
   end case;

   --  type Platform_Type is ("Windows", "Linux");
   --  Platform : Platform_Type := external ("Sancta_OS", "Linux");
   --  Does nothing for now.

   Lib_Name    := "Sancta";
   Lib_Version := "20070223";

   type Build_Type   is ("Debug", "Release", "Fastest", "No_Options", "Profile");
   type Linking_Type is ("Dependencies", "Static_Library", "Dynamic_Library");

   Build : Build_Type   := external ("Sancta_Build", "Debug");
   Link  : Linking_Type := External ("Sancta_Link",  "Dependencies");

   case Link is
      when "Dependencies" =>
         for Main use ("sancta-main-sanctabot.adb",
                       "sancta-main-log_plot.adb",
                       "sancta-main-sm_plot.adb",
                       "sancta-main-show_assignment.adb");
      when "Static_Library" =>
         for Library_Dir     use "libstatic";
         for Library_Name    use Lib_Name;
         for Library_Kind    use "Static";
         for Library_Version use Lib_Name & ".a." & Lib_Version;
      when "Dynamic_Library" =>
         for Library_Dir     use "libdynamic";
         for Library_Name    use Lib_Name;
         for Library_Kind    use "Dynamic";
         for Library_Version use Lib_Name & ".so." & Lib_Version;
   end case;

   Include_Base  : Yes_No := External ("Sancta_Include_Base",  "Yes");
   Include_Gtk   : Yes_No := External ("Sancta_Include_Gtk",   "Yes");
   Include_Rtwmp : Yes_No := External ("Sancta_Include_Rtwmp", "Yes");
   Include_Slam  : Yes_No := External ("Sancta_Include_Slam",  "No");
   Include_Test  : Yes_No := External ("Sancta_Include_Test",  "Yes");

   case Include_Base is
      when "Yes" => for Source_Dirs use project'Source_Dirs & ("src");
      when "No"  => null;
   end case;

   case Include_Gtk is
      when "Yes" => for Source_Dirs use project'Source_Dirs &
                           ("src/sancta-gtk", "src/sancta-gtk/main", "src/sancta-gtk/visor/src", "src/test-gtk");
      when "No"  => null;
   end case;

   case Include_Rtwmp is
      when "Yes" => for Source_Dirs use project'Source_Dirs & ("src/rtwmp", "src/rtwmp/current/src");
      when "No"  => null;
   end case;

   case Include_Slam is
      when "Yes" => for Source_Dirs use project'Source_Dirs & ("src/slam-maite", "src/slam-maite/slam", "src/slam-maite/tools");
      when "No"  => null;
   end case;

   case Include_Test is
      when "Yes" => for Source_Dirs use project'Source_Dirs & ("src/test");
      when "No"  => null;
   end case;

   package Ide is
      for Vcs_Kind use "Subversion";
   end Ide;

   package Compiler is
      for Default_Switches ("C")   use ("-g", "-Wall", "-O2");
      for Default_Switches ("C++") use ("-g", "-Wall", "-O2");
      for Default_Switches ("Ada") use ("-g", "-gnatf", "-gnat05", "-gnatwa", "-gnatVa", "-gnatyacehikn", "-gnatqQ");

      case Include_Slam is
         when "Yes" =>
            for Default_Switches ("c")   use Compiler'Default_Switches ("c")   & ("-I/home/jano/local/include/player-2.0");
            for Default_Switches ("c++") use Compiler'Default_Switches ("c++") & ("-I/home/jano/local/include/player-2.0");
         when "No" => null;
      end case;

      case Build is
         when "Profile" =>
            for Default_Switches ("Ada") use Compiler'Default_Switches ("Ada") &
              ("-O2", "-gnato", "-fstack-check", "-gnata", "-gnatpg");
         when "Debug" =>
            for Default_Switches ("Ada") use Compiler'Default_Switches ("Ada") &
              ("-O2", "-gnato", "-fstack-check", "-gnata");
         when "Release" =>
            for Default_Switches ("Ada") use ("-g", "-O3", "-gnatn", "-gnatp");
            --  for Default_Switches ("Ada") use Compiler'Default_Switches ("Ada") & ("-O3", "-gnatn", "-gnatp");
            for Default_Switches ("C")   use Compiler'Default_Switches ("C")   & ("-O3");
            for Default_Switches ("C++") use Compiler'Default_Switches ("C++")   & ("-O3");
         when "Fastest" =>
            for Default_Switches ("Ada") use ("-g", "-O3", "-gnatn", "-gnatN", "-gnatp");
            for Default_Switches ("C")   use Compiler'Default_Switches ("C")   & ("-O3");
            for Default_Switches ("C++") use Compiler'Default_Switches ("C++") & ("-O3");
         when "No_Options" =>
            for Default_Switches ("Ada") use ("-gnat05");
            --  Deliberately override default switches not to have any!
      end case;
   end Compiler;

   package Binder is
      for Default_Switches ("Ada") use ("-E", "-g", "-static");
      --  "-r" to list applicable restrictions to partition.
   end Binder;

   package Linker is
      for Default_Switches ("Ada") use ("-g", "/usr/lib/libgsl.a");
      for Default_Switches ("C")   use ("-g");
      for Default_Switches ("C++") use ("-g");

      case Include_Rtwmp is
         when "Yes" =>
            --  This form works when the current open project is sancta.gpr
            --  Should be explicitly appended by descendant projects
           for Default_Switches ("Ada") use Linker'Default_Switches ("Ada") &
             ("-Lsrc/rtwmp/lib",
	      "-Wl,-Bstatic",  -- force static linking
	      "-lrt-wmp",
	      "-lrt",          --  rt is for system clock_gettime, used by rt-wmp
	      "-Wl,-Bdynamic", -- restore default dynamic linking needed by other libs
              "");

            --  This form works when the current open project is a descendant,
            --  e.g. nerus.gpr
	   for Linker_Options use Linker'Linker_Options &
            ("-Lsrc/rtwmp/lib");
            --  Needed since the Default_Switches uses the base path of the
            --  inheriting project and fails for relative paths.
            --  This however works, dunno exactly why. Bug?
         when "No"  => null;
      end case;
   end Linker;

   package Builder is
      for Default_Switches ("Ada") use ("-g", "-j3");
      for Executable ("sancta-main-log_plot.adb")        use "log_plot";
      for Executable ("sancta-main-sm_plot.adb")         use "sm_plot";
      for Executable ("sancta-main-show_assignment.adb") use "show_assignment";
      for Executable ("sancta-main-sanctabot.adb")       use "sanctabot";
   end Builder;

   package Pretty_Printer is
      for Default_Switches ("Ada") use ("-A1", "-A2", "-A3", "-A4");
   end Pretty_Printer;

   package Naming is
      for Specification_Suffix  ("C") use ".h";
      for Implementation_Suffix ("C") use ".c";
      for Specification_Suffix  ("C++") use ".hh";
      for Implementation_Suffix ("C++") use ".cc";
      for Specification_Suffix  ("Changelog") use "changelog";
      for Specification_Suffix  ("Project file") use ".gpr";
      for Specification_Suffix  ("Python") use ".py";
   end Naming;

end Sancta;
