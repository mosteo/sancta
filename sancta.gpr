with "mbicp/mbicp";
with "agpl/agpl";
with "agpl/gtkada_conditional";
with "player3-ada/player3_ada.gpr";
with "player3-ada/playerc30_jano";

project Sancta is

   type Boolean is ("True", "False");

   for Languages use ("Ada", "C", "C++");

   for Source_Dirs use ("src", "src/main");
   for Object_Dir  use "obj";
   for Exec_Dir    use "obj";

   type       Hardware_Type is ("Player", "Aria");
   Hardware : Hardware_Type := external ("Sancta_Hardware", "Player");

   case Hardware is
      when "Player" => for Source_Dirs use project'Source_Dirs & ("src/player");
      when "Aria"   => for Source_Dirs use project'Source_Dirs & ("src/aria");
   end case;

   Lib_Name    := "Sancta";
   Lib_Version := "20120921";

   type Build_Type   is ("Debug");
   type Linking_Type is ("Dependencies", "Static_Library", "Dynamic_Library");

   Build : Build_Type   := external ("Sancta_Build", "Debug");
   Link  : Linking_Type := External ("Sancta_Link",  "Dependencies");

   case Link is
      when "Dependencies" =>
         for Main use ("sanctabot.adb");
      when "Static_Library" =>
         for Library_Dir     use "libstatic";
         for Library_Name    use Lib_Name;
         for Library_Kind    use "Static";
         for Library_Version use Lib_Name & ".a." & Lib_Version;
      when "Dynamic_Library" =>
         for Library_Dir     use "libdynamic";
         for Library_Name    use Lib_Name;
         for Library_Kind    use "Dynamic";
         for Library_Version use Lib_Name & ".so." & Lib_Version;
   end case;

   Include_Gtk   : Boolean := External ("Sancta_Include_Gtk",   "False");
   Include_Rtwmp : Boolean := External ("Sancta_Include_Rtwmp", "False");
   Include_Slam  : Boolean := External ("Sancta_Include_Slam",  "False");
   Include_Test  : Boolean := External ("Sancta_Include_Test",  "False");

   case Include_Gtk is
      when "True" =>
         for Source_Dirs use project'Source_Dirs &
         ("src/sancta-gtk",
          "src/sancta-gtk/main",
          "src/sancta-gtk/visor/src",
          "src/test-gtk");
         for Main use project'Main &
           ("sancta-main-log_plot.adb",
            "sancta-main-sm_plot.adb",
            "sancta-main-show_assignment.adb");
      when "False"  => null;
   end case;

   case Include_Rtwmp is
      when "True" => for Source_Dirs use project'Source_Dirs &
         ("src/rtwmp",
          "src/rtwmp/current/src");
      when "False"  => null;
   end case;

   case Include_Slam is
      when "True" => for Source_Dirs use project'Source_Dirs &
         ("src/slam-maite",
          "src/slam-maite/slam",
          "src/slam-maite/tools");
      when "False"  => null;
   end case;

   case Include_Test is
      when "True" => for Source_Dirs use project'Source_Dirs & ("src/test");
      when "False"  => null;
   end case;

   package Ide is
      for Vcs_Kind use "git";
   end Ide;

   package Compiler is

      for Required_Switches ("Ada") use ("-gnat2012",
                                         "-gnatwa",  -- optional warnings from gnat
                                         "-Wall",    -- optional warnings from gcc
                                         "-gnatwt",  -- detect dead code
                                         "-gnatwjl", -- extra warnings
                                         "-gnaty",   -- standard source code style
                                         "");

      for Required_Switches ("C")   use ("-Wall");
      for Required_Switches ("C++") use ("-Wall");

      case Include_Slam is
         when "True" =>
            for Default_Switches ("c")   use Compiler'Default_Switches ("c")   &
            ("-I/home/jano/local/include/player-2.0");
            for Default_Switches ("c++") use Compiler'Default_Switches ("c++") &
            ("-I/home/jano/local/include/player-2.0");
         when "False" => null;
      end case;

      case Build is
         when "Debug" =>
            for Default_Switches ("Ada") use ("-g",
                                              "-O2",
                                              "-gnato", -- Standard Ada overflow
                                              "-fstack-check",
                                              "-gnata", -- All assertions
                                              "-gnateE", -- Extra range check info in exceptions
                                              "-gnatf", -- full errors
                                              "-gnatqQ", -- compile as much as possible even with errors
                                              "-gnatVa", -- all validity checks (expensive, use Vd for default)
                                              "");
            for Default_Switches ("C")   use ("-g", "-O2");
            for Default_Switches ("C++") use ("-g", "-O2");
      end case;
   end Compiler;

   package Binder is
      for Default_Switches ("Ada") use ("-E",      -- exception tracebacks
                                        "-g",      -- keep debug symbols? (Unsure)
                                        -- "-r",   -- restrictions that might be applied
                                        "-static", -- static runtime
                                        "");
   end Binder;

   package Linker is
      for Default_Switches ("Ada") use ("-g");
      for Default_Switches ("C")   use ("-g");
      for Default_Switches ("C++") use ("-g");

      for Linker_Options use ("-lgsl");
      --  Linker.Linker_Options apply at the main project, not here.
      --  Needed by something (although already in AGPL)

      Rtwmp_Link := ("-Lsrc/rtwmp/lib",
	      "-Wl,-Bstatic",  -- force static linking
	      "-lrt-wmp",
	      "-lrt",          --  rt is for system clock_gettime, used by rt-wmp
	      "-Wl,-Bdynamic", -- restore default dynamic linking needed by other libs
              "");

      case Include_Rtwmp is
         when "True" =>
            --  This form works when the current open project is sancta.gpr
            --  Should be explicitly appended by descendant projects
            for Default_Switches ("Ada") use Linker'Default_Switches ("Ada") &
              Rtwmp_Link;

            --  This form works when the current open project is a descendant,
            --  e.g. ctree.gpr
	   for Linker_Options use Linker'Linker_Options & Rtwmp_Link;
            --  Needed since the Default_Switches uses the base path of the
            --  inheriting project and fails for relative paths.
            --  This however works, dunno exactly why. Bug?
         when "False"  => null;
      end case;
   end Linker;

   package Builder is
      for Default_Switches ("Ada") use ("-g", "-j3");
      for Executable ("sancta-main-log_plot.adb")        use "log_plot";
      for Executable ("sancta-main-sm_plot.adb")         use "sm_plot";
      for Executable ("sancta-main-show_assignment.adb") use "show_assignment";
      for Executable ("sancta-main-sanctabot.adb")       use "sanctabot";
   end Builder;

   package Pretty_Printer is
      for Default_Switches ("Ada") use ("-A1", "-A2", "-A3", "-A4");
   end Pretty_Printer;

   package Naming is
      for Specification_Suffix  ("C") use ".h";
      for Implementation_Suffix ("C") use ".c";
      for Specification_Suffix  ("C++") use ".hh";
      for Implementation_Suffix ("C++") use ".cc";
      for Specification_Suffix  ("Changelog") use "changelog";
      for Specification_Suffix  ("Project file") use ".gpr";
      for Specification_Suffix  ("Python") use ".py";
   end Naming;

end Sancta;
